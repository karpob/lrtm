#Fit the data!
#from numpy import *
from mpfit import mpfit
from residual_enthalpy_data import residual_enthalpy_data
from residual_pXT_data import residual_pXT_data
from residual_B_data import residual_B_data
from residual_C_data import residual_C_data
from pylab import *
from numpy import *
from generate_pressure import generate_pressure
from scipy.optimize import leastsq
from enthalpy_h2_h2o_mixture import enthalpy_h2_h2o_mixture
p=zeros(20)
MPa_to_kPa=1000.0
Bars_to_kPa=100.0
p[0]=1.24701707#1.23559556
p[1]=1.07043883#1.19071824
p[2]=5.26031854#5.31118153
p[3]=0.65927408#0.512070639


p[4]=8.02175977#2.33543043e02
p[5]=-0.37859151#-3.99606046e-01
p[6]=12.1107863#2.83878327e-02
p[7]=-18.14819919#-2.86803584e02 
p[8]=0.0 #

p[9]=-0.67344182#-2.34300459e00
p[10]=10.06427464#6.18096000e00
p[11]=-0.37270025#-8.44717553e-01
p[12]=2.75811665#2.01233171e00 
p[13]=0.0#7.08195534e-01

p[14]=1.49560746#2.64688090e+00 
p[15]=1.02404651#4.10393021e-01
p[16]=0.38034405#-3.63636427e-02
p[17]=1.95593669#3.15497193e+00
p[18]=0.0#-7.08192423e-01#
p[19]=1.0#1.28287369e+00#
p=asarray([  0.92254385,   0.45783246,   5.1791537,    0.4516013,   -2.59307039,
            -1.27517692,   0.62529449,   3.6806721,  -14.25620312,   4.50090634,
             0.64246779,  78.4079688,    4.0779642,   -0.43066962,   0.5449172,   -0.642436,
             19.11255919,   0.63147353,   0.45241718,   1.07577125])
#p=asarray([1.55241283,0.42769401,4.27992598,0.96670593,2.85272332,
#           74.01292232,0.62529449,-15.72930264,-123.66329659,7.75795908,
#           9.44061057,78.4079688,0.74614104,2.18500063,2.26700454,
#           -0.19121408,12.50114055,0.80259888,0.19468873,0.53984808])
#p=asarray([  6.15487076e-01,   1.14901343e+00,   8.78889689e+00,  -1.10795420e+00,
#  -8.00207656e+01,   7.40203338e+02,   1.34741620e+01,  -1.81481992e+01,
#   1.35574387e+01,   9.79293834e+00,  -3.22335646e+00,  -1.20664080e+00,
#   2.75811665e+00,  -1.20677053e+00,   4.98924356e+00,   1.13751874e+00,
#   3.80940010e-01,   6.58968592e+00,  -7.85827104e-08,   3.81289143e-01])

#p=asarray([ -2.39988683e-01,  -5.67507832e-02,  -3.43399440e+00,   5.44194356e-02,
#  -8.00207656e+01,   1.86165685e+05,   1.34772817e+01,  -1.81481992e+01,
#   1.35574437e+01,   9.79293834e+00,  -4.11498654e+00,  -1.20523004e+00,
#   2.75811665e+00,  -1.20533998e+00,   4.98924356e+00,   1.46220733e+00,
#   3.80942341e-01,   6.58968592e+00,  -7.62088181e-08,   3.81278639e-01])
#in cc/mol-> L/mol: (cc/mol)*(1 L/1000 cc)=multiply by 0.001
p=asarray([  2.38772690e+00,   6.00345713e-01,  -4.76986887e+00,  -5.28153326e-01,
             1.48640322e+02,   3.37750345e+02,  -8.02065003e-07,  -1.93552324e+01,
            -1.50381489e+02,  -5.81587781e-01,   2.47064023e-01,  -1.36572784e-02,
            -7.90363321e-01,   8.74730671e-01,   5.54290051e-01,  -3.98399346e-01,
             1.18211958e+01,   8.38816225e-01,  -1.16348077e+00,   8.07927755e-06])
CC_per_mol_to_Liters_per_mol=0.001
Data_B_B_vals=CC_per_mol_to_Liters_per_mol*asarray([-72.3,-72.86,-65.5,-60.75,-58.8,-55.52,-38.62,-23.49,-6.26,5.9,8.16,-62.34,-57.42,-62.99,-56.35,-55.78,-53.14,-40.79,-19.24,-3.42,4.05,9.94,-62.57,-59.42,-59.38,-53.98,-52.24,-47.49,-35.37,-19.17,-4.38,5.35,8.6,-58.82,-56.22,-55.97,-50.65,-50.99,-42.79,-30.66,-18.16,-5.2,6.4,8.16])
#in C converted to K
Data_B_T_vals=273.15+asarray([380,380,380,380,380,380,380,380,380,380,380,400,400,400,400,400,400,400,400,400,400,400,420,420,420,420,420,420,420,420,420,420,420,440,440,440,440,440,440,440,440,440,440,440])
Data_B_x_h2_vals=asarray([0.01,0.03,0.06,0.09,0.12,0.2,0.25,0.4,0.6,0.8,0.9,0.01,0.03,0.06,0.09,0.12,0.2,0.25,0.4,0.6,0.8,0.9,0.01,0.03,0.06,0.09,0.12,0.2,0.25,0.4,0.6,0.8,0.9,0.01,0.03,0.06,0.09,0.12,0.2,0.25,0.4,0.6,0.8,0.9])
Data_B_x_h2o_vals=1.0-Data_B_x_h2_vals#asarray([])
Data_C_vals=CC_per_mol_to_Liters_per_mol*CC_per_mol_to_Liters_per_mol*asarray([1580.57,1578.49,1439.30,1395.68,1399.75,1511.79,1047.75,806.92,605.14,503.93,565.32,1281.16,1188.67,1420.97,1296.81,1345.21,1478.18,1166.11,710.47,528.30,566.33,496.10,1381.01,1299.78,1369.50,1297.59,1289.93,1309.09,1029.32,735.58,589.89,545.00,542.15,1315.16,1258.02,1320.81,1239.98,1345.80,1150.23,914.58,745.09,656.09,508.69,557.31])                       

#[optimized_params,message]=leastsq(residual_B_data,p[:],args=(Data_B_B_vals,Data_B_T_vals,Data_B_x_h2_vals,Data_B_x_h2o_vals))
res=residual_B_data(p[:],Data_B_B_vals,Data_B_T_vals,Data_B_x_h2_vals,Data_B_x_h2o_vals)

res2=residual_C_data(p[:],Data_C_vals,Data_B_T_vals,Data_B_x_h2_vals,Data_B_x_h2o_vals)

print Data_B_B_vals
print Data_C_vals
#params=asarray([BetaT,BetaV,GammaT,GammaV])

#best,val,d=mpfit('residual_B_data',params,fprime=None,args=(Data_B_B_vals,Data_B_T_vals,Data_B_x_h2_vals,Data_B_x_h2o_vals),approx_grad=1,bounds=[(0.5,5),(0.5,5),(0.5,5),(0.5,5)],iprint=1)
